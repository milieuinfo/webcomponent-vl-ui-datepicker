/**
 * DEPS
 */
import flatpickr from 'flatpickr';
import Dutch from 'flatpickr/dist/l10n/nl.js';

/**
 * Private Variables
 */
const datePickerclass = `js-${vl.ns}datepicker`,
  datePickerInputclass = `${datePickerclass}-input`,
  datePickerToggleclass = `${datePickerclass}-toggle`,
  flatPickerMobileClass = 'flatpickr-mobile',
  datepickerData = `data-${vl.ns}datepicker`,
  datePickerDataFormat = `${datepickerData}-format`,
  datePickerDataVisualFormat = `${datepickerData}-visual-format`,
  datePickerDataMinDate = `${datepickerData}-min-date`,
  datePickerDataMaxDate = `${datepickerData}-max-date`,
  datePickerSelectedDate = `${datepickerData}-selected-date`,
  datePickerEnableTime = `${datepickerData}-enable-time`,
  datePickerDisableDate = `${datepickerData}-disable-date`,
  datePicker24hrTime = `${datepickerData}-24hr-time`,
  datePickerDataMinTime = `${datepickerData}-min-time`,
  datePickerDataMaxTime = `${datepickerData}-max-time`,
  datePickerDefaultTime = `${datepickerData}-default-time`,
  datePickerRange = `${datepickerData}-range`;

class Datepicker {
  /**
   * dress function for the accordion functionality
   * @param  {DOM element} element
   * @return {false}
   */
  dress(datepicker) {
    const datepickerInput = datepicker.querySelector(`.${datePickerInputclass}`),
      datepickerButton = datepicker.querySelector(`.${datePickerToggleclass}`),
      datepickerButtonType = datepickerButton.type,
      datepickerDateFormat = datepicker.getAttribute(datePickerDataFormat) ? datepicker.getAttribute(datePickerDataFormat) : 'd.m.Y',
      datePickerVisualFormat = datepicker.getAttribute(datePickerDataVisualFormat) ? datepicker.getAttribute(datePickerDataVisualFormat) : 'd.m.Y',
      datePickerMode = datepicker.hasAttribute(datePickerRange) ? 'range' : 'single';

    const settings = {
      'altInput': !!datepicker.getAttribute(datePickerDataVisualFormat),
      'altFormat': datePickerVisualFormat,
      'allowInput': true,
      'dateFormat': datepickerDateFormat,
      'minDate': datepicker.getAttribute(datePickerDataMinDate),
      'maxDate': datepicker.getAttribute(datePickerDataMaxDate),
      'defaultDate': datepicker.getAttribute(datePickerSelectedDate),
      'locale': Dutch.nl,
      'clickOpens': false,
      'enableTime': datepicker.getAttribute(datePickerEnableTime),
      'noCalendar': datepicker.getAttribute(datePickerDisableDate),
      'time_24hr': datepicker.getAttribute(datePicker24hrTime) ? datepicker.getAttribute(datePicker24hrTime) : true,
      'minTime': datepicker.getAttribute(datePickerDataMinTime),
      'maxTime': datepicker.getAttribute(datePickerDataMaxTime),
      'defaultTime': datepicker.getAttribute(datePickerDefaultTime),
      'positionElement': datepickerButton,
      'mode': datePickerMode
    };

    const fltpckr = flatpickr(datepickerInput, settings);

    // Reset datepicker button, overwrite flatpckr
    if (vl.util.exists(datepickerButton)) {
      datepickerButton.type = datepickerButtonType;
    }

    datepickerButton.addEventListener('click', (event) => {
      event.preventDefault();
      fltpckr.open();
    });

    datepickerButton.addEventListener('keydown', (e) => {
      switch (e.keyCode) {
        case 13:
        case 32:
          fltpckr.open();
          break;
        default:
          return;
      }
    });

    const flatpickrMobile = datepicker.querySelector(`.${flatPickerMobileClass}`);

    if(flatpickrMobile){
      datepickerButton.addEventListener('click', (event) => {
        event.preventDefault();

        flatpickrMobile.focus();
        flatpickrMobile.click(); // click is needed for some devices
      });
    }
  }

  /**
   * dressAll function for the accordion functionality
   * @return {false}
   */
  dressAll() {
    const datepickers = document.querySelectorAll(
      `.${datePickerclass}:not([data-${vl.ns}js-dress="false"]),
      [${datepickerData}]:not([data-${vl.ns}js-dress="false"])`
    );

    vl.util.each(datepickers, datepicker => {
      this.dress(datepicker);
    });
  }
}

if(!('datepicker' in vl)) {
  vl.datepicker = new Datepicker();
  vl.datepicker.dressAll();
}

export default Datepicker;
