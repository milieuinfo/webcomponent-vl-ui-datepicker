import{vlElement,define,awaitUntil}from"/node_modules/vl-ui-core/dist/vl-core.min.js";import"/node_modules/vl-ui-input-addon/dist/vl-input-addon.min.js";import"/node_modules/vl-ui-input-group/dist/vl-input-group.min.js";import"/node_modules/vl-ui-input-field/dist/vl-input-field.min.js";import{vlFormValidation}from"/node_modules/vl-ui-form-validation/dist/vl-form-validation.min.js";import{vlPattern}from"/node_modules/vl-ui-pattern/dist/vl-pattern.min.js";import"/node_modules/vl-ui-form-message/dist/vl-form-message.min.js";import"/node_modules/vl-ui-icon/dist/vl-icon.min.js";import"/node_modules/@govflanders/vl-ui-util/dist/js/util.min.js";import"/node_modules/@govflanders/vl-ui-core/dist/js/core.min.js";import"/node_modules/vl-ui-datepicker/lib/datepicker.js";Promise.all([vlFormValidation.ready(),vlPattern.ready()]).then(()=>define("vl-datepicker",VlDatepicker));export class VlDatepicker extends(vlElement(HTMLElement)){static get formAssociated(){return!0}static get _observedAttributes(){return["type","format","visual-format","selected-date","min-date","max-date","min-time","max-time","am-pm","error","success","value","error-message","error-placeholder","data-required","pattern","pattern-prefix"]}constructor(){super('\n      <style>\n        @import \'/node_modules/vl-ui-datepicker/dist/style.css\';\n        @import \'/node_modules/vl-ui-form-message/dist/style.css\';\n\n        #wrapper {\n          position: relative;\n        }\n\n        .flatpickr-calendar {\n          display: none;\n        }\n      </style>\n      <div is="vl-input-group" id="wrapper" data-vl-datepicker>\n        <input id="input" is="vl-input-field" data-vl-block type="text" class="js-vl-datepicker-input"/>\n        <button id="button" is="vl-button-input-addon" type="button" class="js-vl-datepicker-toggle">\n          <span id="icon" is="vl-icon" data-vl-icon="calendar"></span>\n        </button>\n      </div>\n    '),this._internals=this.attachInternals()}connectedCallback(){this._dress(),this._registerChangeEvent()}disconnectedCallback(){this._observer&&this._observer.disconnect()}get name(){return this.getAttribute("name")}get form(){return this._internals.form}get validity(){return this._internals.validity}get validationMessage(){return this._internals.validationMessage}get willValidate(){return this._internals.willValidate}_dress(){this._dressed||awaitUntil(()=>this._inputElement.classList.contains("vl-input-field")).then(()=>{vl.datepicker.dress(this._element),this._dressFormValidation(),this._dressPattern()})}get value(){return this._inputElement.value}set value(t){this._inputElement._flatpickr?this._inputElement._flatpickr.setDate(t,!0,this._format):this._inputElement.value=t}get _attributePrefix(){return"data-vl-datepicker-"}get _inputElement(){return this._element.querySelector("#input")}get _format(){return this.getAttribute("format")}get _dressed(){return null!=this._inputElement._flatpickr}_typeChangedCallback(t,e){if(t)console.error('The "type" attribute cannot be changed.');else switch(e){case"time":this._element.setAttribute(this._attributePrefix+"enable-time","true"),this._element.setAttribute(this._attributePrefix+"disable-date","true");break;case"date-time":this._element.setAttribute(this._attributePrefix+"enable-time","true");break;default:this._element.setAttribute(this._attributePrefix+e,"")}}_formatChangedCallback(t,e){this._element.setAttribute(this._attributePrefix+"format",e)}_visualFormatChangedCallback(t,e){this._element.setAttribute(this._attributePrefix+"visual-format",e)}_selectedDateChangedCallback(t,e){this._element.setAttribute(this._attributePrefix+"selected-date",e)}_minDateChangedCallback(t,e){this._element.setAttribute(this._attributePrefix+"min-date",e)}_maxDateChangedCallback(t,e){this._element.setAttribute(this._attributePrefix+"max-date",e)}_minTimeChangedCallback(t,e){this._element.setAttribute(this._attributePrefix+"min-time",e)}_maxTimeChangedCallback(t,e){this._element.setAttribute(this._attributePrefix+"max-time",e)}_amPmChangedCallback(t,e){this._element.setAttribute(this._attributePrefix+"24hr-time",null==e)}_errorChangedCallback(t,e){null!=e?this._inputElement.setAttribute("data-vl-error",""):this._inputElement.removeAttribute("data-vl-error")}_valueChangedCallback(t,e){this.value=e}_successChangedCallback(t,e){null!=e?this._inputElement.setAttribute("data-vl-success",""):this._inputElement.removeAttribute("data-vl-success")}_errorMessageChangedCallback(t,e){this._inputElement.setAttribute("data-vl-error-message",e)}_errorPlaceholderChangedCallback(t,e){this._inputElement.setAttribute("data-vl-error-placeholder",e)}_dataRequiredChangedCallback(t,e){this._inputElement.setAttribute("data-required",e)}_patternChangedCallback(t,e){this._inputElement.setAttribute("data-vl-pattern",e)}_patternPrefixChangedCallback(t,e){this._inputElement.setAttribute("data-vl-pattern-prefix",e)}_registerChangeEvent(){this._inputElement.addEventListener("change",()=>this.dispatchEvent(new Event("change")))}_dressFormValidation(){this.form&&(this.setAttribute("data-vl-success-class","vl-datepicker--success"),this.setAttribute("data-vl-error-class","vl-datepicker--error"),Object.assign(this,vlFormValidation),this.dress(this.form),this._observer=this._observeFormValidationClasses())}_dressPattern(){Object.assign(this,vlPattern),this.dress(this)}_observeFormValidationClasses(){const t=new MutationObserver(t=>{["error","success"].forEach(e=>{t.find(t=>t.target.classList.contains("vl-datepicker--"+e))?this.setAttribute("data-vl-"+e,""):this.removeAttribute("data-vl-"+e)})});return t.observe(this,{attributes:!0,attributeFilter:["class"]}),t}}