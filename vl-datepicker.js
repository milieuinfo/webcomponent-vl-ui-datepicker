import{VlElement}from"/node_modules/vl-ui-core/vl-core.js";import"/node_modules/flatpickr/dist/flatpickr.min.js";import"/node_modules/flatpickr/dist/l10n/nl.js";import"/node_modules/flatpickr/dist/l10n/fr.js";import"/node_modules/flatpickr/dist/l10n/de.js";(()=>{function e(){var e=document.createElement("link");return e.setAttribute("id",t),e.setAttribute("rel","stylesheet"),e.setAttribute("type","text/css"),e.setAttribute("href","/node_modules/vl-ui-datepicker/style.css"),e}const t="flatpickr-style";!function(){if(!document.head.querySelector("#"+t)){var a=e();document.head.appendChild(a)}}()})();export class VlDatepicker extends VlElement(HTMLElement){constructor(){super(`
            <style>
                @import "/node_modules/vl-ui-datepicker/style.css";
            </style>
            <div id="wrapper" class="vl-input-group">
                <input data-input
                        id="input"
                    class="vl-input-field vl-input-field--block"
                    type="text"/>
                <button data-toggle
                        type="button"
                        name="button"
                        class="vl-input-addon">
                    <i class="vl-vi vl-vi-calendar" aria-hidden="true"></i>
                </button>
            </div>
        `);this._options={locale:"nl",dateFormat:"d-m-Y",time_24hr:true,wrap:true};const type=this.getAttribute("type");switch(type){case"time":this._options.enableTime=true;this._options.noCalendar=true;let iconClasslist=this._element.querySelector(".vl-vi-calendar").classList;iconClasslist.remove("vl-vi-calendar");iconClasslist.add("vl-vi-clock");break;case"date-time":this._options.enableTime=true;break;case"multiple-dates":this._options.mode="multiple";break;case"date-range":this._options.mode="range";break;default:break}}connectedCallback(){this.__createFlatpickr()}static get _observedAttributes(){return["type","locale","format","human-format","default-date","min-date","max-date","disabled-dates","disable-weekends","min-time","max-time","am-pm"]}attributeChangedCallback(attr,oldValue,newValue){super.attributeChangedCallback(attr,oldValue,newValue);this.__createFlatpickr()}_typeChangedCallback(oldValue,newValue){console.error('The "type" attribute cannot be changed.')}_localeChangedCallback(oldValue,newValue){this._options.locale=newValue?newValue:"nl"}_formatChangedCallback(oldValue,newValue){this._options.dateFormat=newValue?newValue:"d-m-Y"}_human_formatChangedCallback(oldValue,newValue){this._options.altInput=!!newValue;this._options.altFormat=newValue}_default_dateChangedCallback(oldValue,newValue){this._options.defaultDate=newValue}_min_dateChangedCallback(oldValue,newValue){this._options.minDate=newValue}_max_dateChangedCallback(oldValue,newValue){this._options.maxDate=newValue}_min_timeChangedCallback(oldValue,newValue){this._options.minTime=newValue}_max_timeChangedCallback(oldValue,newValue){this._options.maxTime=newValue}_am_pmChangedCallback(oldValue,newValue){this._options.time_24hr=!this.hasAttribute("am-pm")}_disabled_datesChangedCallback(oldValue,newValue){this.__disableDates()}_disable_weekendsChangedCallback(oldValue,newValue){this.__disableDates()}__disableDates(){const disabledDates=this.getAttribute("disabled-dates");this._options.disable=disabledDates?JSON.parse(disabledDates):[];if(this.hasAttribute("disable-weekends")){this._options.disable.push(function(date){return date.getDay()===0||date.getDay()===6})}}__createFlatpickr(){this._picker=flatpickr(this._element,this._options)}};customElements.define("vl-datepicker",VlDatepicker);