import{VlElement,awaitScript,awaitUntil,define}from"/node_modules/vl-ui-core/vl-core.js";import"/node_modules/vl-ui-button/vl-button.js";import"/node_modules/vl-ui-input-group/vl-input-group.js";import"/node_modules/vl-ui-input-field/vl-input-field.js";import"/node_modules/vl-ui-icon/vl-icon.js";Promise.all([awaitScript("util","/node_modules/@govflanders/vl-ui-util/dist/js/util.min.js"),awaitScript("core","/node_modules/@govflanders/vl-ui-core/dist/js/core.min.js"),awaitScript("datepicker","/node_modules/vl-ui-datepicker/dist/datepicker.js"),awaitUntil(()=>window.vl&&window.vl.datepicker)]).then(()=>define("vl-datepicker",VlDatepicker));export class VlDatepicker extends(VlElement(HTMLElement)){constructor(){super('\n            <style>\n                @import "/node_modules/vl-ui-datepicker/style.css";\n                @import "/node_modules/vl-ui-button/style.css";\n                @import "/node_modules/vl-ui-input-field/style.css";\n                @import "/node_modules/vl-ui-icon/style.css";\n\n                #wrapper {\n                    position: relative;\n                }\n            </style>\n            <div is="vl-input-group" id="wrapper" data-vl-datepicker>\n                <input id="input" is="vl-input-field" block type="text" class="js-vl-datepicker-input"/>\n                <button id="button" is="vl-button-input-addon" type="button" class="js-vl-datepicker-toggle">\n                    <span id="icon" is="vl-icon" icon="calendar"></span>\n                </button>\n            </div>\n        ')}connectedCallback(){this.dress()}static get _observedAttributes(){return["type","format","visual-format","selected-date","min-date","max-date","min-time","max-time","am-pm","error","success"]}dress(){this._dressed||vl.datepicker.dress(this._element)}get value(){return this._inputElement.value}set value(t){this._inputElement._flatpickr.setDate(t,!1,this._format)}get _stylePath(){return"/node_modules/vl-ui-datepicker/style.css"}get _attributePrefix(){return"data-vl-datepicker-"}get _inputElement(){return this._element.querySelector("#input")}get _format(){return this.getAttribute("format")}_typeChangedCallback(t,e){if(t)console.error('The "type" attribute cannot be changed.');else switch(e){case"time":this._element.setAttribute(this._attributePrefix+"enable-time","true"),this._element.setAttribute(this._attributePrefix+"disable-date","true");break;case"date-time":this._element.setAttribute(this._attributePrefix+"enable-time","true");break;default:this._element.setAttribute(this._attributePrefix+e,"")}}_formatChangedCallback(t,e){this._element.setAttribute(this._attributePrefix+"format",e)}_visual_formatChangedCallback(t,e){this._element.setAttribute(this._attributePrefix+"visual-format",e)}_selected_dateChangedCallback(t,e){this._element.setAttribute(this._attributePrefix+"selected-date",e)}_min_dateChangedCallback(t,e){this._element.setAttribute(this._attributePrefix+"min-date",e)}_max_dateChangedCallback(t,e){this._element.setAttribute(this._attributePrefix+"max-date",e)}_min_timeChangedCallback(t,e){this._element.setAttribute(this._attributePrefix+"min-time",e)}_max_timeChangedCallback(t,e){this._element.setAttribute(this._attributePrefix+"max-time",e)}_am_pmChangedCallback(t,e){this._element.setAttribute(this._attributePrefix+"24hr-time",null==e)}_errorChangedCallback(t,e){null!=e?this._inputElement.setAttribute("error",""):this._inputElement.removeAttribute("error")}_successChangedCallback(t,e){null!=e?this._inputElement.setAttribute("success",""):this._inputElement.removeAttribute("success")}}
